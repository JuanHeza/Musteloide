import {
  getOverrides,
  styled
} from "./chunk-RR725WED.js";
import "./chunk-ZNYAC3MD.js";
import "./chunk-JWO7HYR3.js";
import {
  require_react
} from "./chunk-IGOAJGOA.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/baseui/esm/avatar/avatar.js
var React = __toESM(require_react());

// node_modules/baseui/esm/avatar/styled-components.js
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function getSize(props) {
  var $size = props.$size, $theme = props.$theme;
  var defaultSize = $theme.sizing.scale1000;
  var size = $size || defaultSize;
  return $theme.sizing[size] || size;
}
var Avatar = styled("img", function(props) {
  var themedSize = getSize(props);
  return {
    borderTopLeftRadius: "50%",
    borderTopRightRadius: "50%",
    borderBottomRightRadius: "50%",
    borderBottomLeftRadius: "50%",
    boxSizing: "border-box",
    display: props.$imageLoaded ? "block" : "none",
    height: themedSize,
    width: themedSize,
    objectFit: "cover"
  };
});
Avatar.displayName = "Avatar";
Avatar.displayName = "Avatar";
var Initials = styled("div", function(props) {
  return _objectSpread(_objectSpread({}, props.$theme.typography.font300), {}, {
    color: props.$theme.colors.mono100,
    alignItems: "center",
    display: "flex",
    justifyContent: "center",
    height: "100%"
  });
});
Initials.displayName = "Initials";
Initials.displayName = "Initials";
var Root = styled("div", function(props) {
  var $didImageFailToLoad = props.$didImageFailToLoad;
  var themedSize = getSize(props);
  return {
    backgroundColor: $didImageFailToLoad ? props.$theme.colors.primary : null,
    borderTopLeftRadius: "50%",
    borderTopRightRadius: "50%",
    borderBottomRightRadius: "50%",
    borderBottomLeftRadius: "50%",
    boxSizing: "border-box",
    display: "inline-block",
    height: $didImageFailToLoad ? themedSize : null,
    width: $didImageFailToLoad ? themedSize : null
  };
});
Root.displayName = "Root";
Root.displayName = "Root";

// node_modules/baseui/esm/avatar/avatar.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function getInitials(name) {
  var words = name.split(" ");
  var initials = words.map(function(word) {
    return word[0];
  });
  return initials.slice(0, 2).join("").toUpperCase();
}
function Avatar2(_ref) {
  var initials = _ref.initials, _ref$name = _ref.name, name = _ref$name === void 0 ? "" : _ref$name, _ref$overrides = _ref.overrides, overrides = _ref$overrides === void 0 ? {} : _ref$overrides, _ref$size = _ref.size, size = _ref$size === void 0 ? "scale1000" : _ref$size, src = _ref.src;
  var imageRef = React.useRef(null);
  var _React$useState = React.useState(false), _React$useState2 = _slicedToArray(_React$useState, 2), imageLoaded = _React$useState2[0], setImageLoaded = _React$useState2[1];
  function handleLoad() {
    setImageLoaded(true);
  }
  function handleError() {
    setImageLoaded(false);
  }
  React.useEffect(function() {
    setImageLoaded(false);
    if (imageRef.current) {
      if (typeof src === "string") {
        imageRef.current.src = src;
        imageRef.current.onload = handleLoad;
        imageRef.current.onerror = handleError;
      }
    }
    return function() {
      if (imageRef.current) {
        imageRef.current.onload = null;
        imageRef.current.onerror = null;
      }
    };
  }, [src]);
  var _getOverrides = getOverrides(overrides.Avatar, Avatar), _getOverrides2 = _slicedToArray(_getOverrides, 2), Avatar3 = _getOverrides2[0], avatarProps = _getOverrides2[1];
  var _getOverrides3 = getOverrides(overrides.Initials, Initials), _getOverrides4 = _slicedToArray(_getOverrides3, 2), Initials2 = _getOverrides4[0], initialsProps = _getOverrides4[1];
  var _getOverrides5 = getOverrides(overrides.Root, Root), _getOverrides6 = _slicedToArray(_getOverrides5, 2), Root2 = _getOverrides6[0], rootProps = _getOverrides6[1];
  return React.createElement(Root2, _extends({
    "aria-label": imageLoaded ? null : name,
    role: imageLoaded ? null : "img",
    $didImageFailToLoad: !imageLoaded,
    $size: size,
    "data-baseweb": "avatar"
  }, rootProps), React.createElement(Avatar3, _extends({
    ref: imageRef,
    alt: name,
    $imageLoaded: imageLoaded,
    $size: size
  }, avatarProps)), !imageLoaded && React.createElement(Initials2, initialsProps, initials || getInitials(name)));
}
export {
  Avatar2 as Avatar,
  Avatar as StyledAvatar,
  Initials as StyledInitials,
  Root as StyledRoot
};
//# sourceMappingURL=baseui_avatar.js.map
