// node_modules/baseui/esm/utils/focusVisible.js
var initialized = false;
var hadKeyboardEvent = true;
var hadFocusVisibleRecently = false;
var inputTypesWhitelist = {
  text: true,
  search: true,
  url: true,
  tel: true,
  email: true,
  password: true,
  number: true,
  date: true,
  month: true,
  week: true,
  time: true,
  datetime: true,
  "datetime-local": true
};
function focusTriggersKeyboardModality(node) {
  var type = node.type, tagName = node.tagName;
  if (tagName === "INPUT" && inputTypesWhitelist[type] && !node.readOnly) {
    return true;
  }
  if (tagName === "TEXTAREA" && !node.readOnly) {
    return true;
  }
  if (node.isContentEditable) {
    return true;
  }
  return false;
}
function handleKeyDown(event) {
  if (event.metaKey || event.altKey || event.ctrlKey) {
    return;
  }
  hadKeyboardEvent = true;
}
function handlePointerDown() {
  hadKeyboardEvent = false;
}
function handleVisibilityChange() {
  if (this.visibilityState === "hidden") {
    if (hadFocusVisibleRecently) {
      hadKeyboardEvent = true;
    }
  }
}
function prepare(doc) {
  doc.addEventListener("keydown", handleKeyDown, true);
  doc.addEventListener("mousedown", handlePointerDown, true);
  doc.addEventListener("pointerdown", handlePointerDown, true);
  doc.addEventListener("touchstart", handlePointerDown, true);
  doc.addEventListener("visibilitychange", handleVisibilityChange, true);
}
function isFocusVisible(event) {
  try {
    return event.target.matches(":focus-visible");
  } catch (error) {
  }
  return hadKeyboardEvent || focusTriggersKeyboardModality(event.target);
}
function initFocusVisible(node) {
  if (!initialized && node != null) {
    initialized = true;
    prepare(node.ownerDocument);
  }
}
var forkFocus = function forkFocus2(rootProps, handler) {
  return function(e) {
    if (typeof rootProps.onFocus === "function") {
      rootProps.onFocus(e);
    }
    handler(e);
  };
};
var forkBlur = function forkBlur2(rootProps, handler) {
  return function(e) {
    if (typeof rootProps.onBlur === "function") {
      rootProps.onBlur(e);
    }
    handler(e);
  };
};

export {
  isFocusVisible,
  initFocusVisible,
  forkFocus,
  forkBlur
};
//# sourceMappingURL=chunk-T5NUF77S.js.map
