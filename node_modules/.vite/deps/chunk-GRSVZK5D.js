import {
  forkBlur,
  forkFocus,
  isFocusVisible
} from "./chunk-T5NUF77S.js";
import {
  getOverrides,
  styled
} from "./chunk-RR725WED.js";
import {
  require_react_is
} from "./chunk-JWO7HYR3.js";
import {
  require_react
} from "./chunk-IGOAJGOA.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/baseui/esm/button/constants.js
var KIND = {
  primary: "primary",
  secondary: "secondary",
  tertiary: "tertiary"
};
var SHAPE = {
  default: "default",
  pill: "pill",
  round: "round",
  circle: "circle",
  square: "square"
};
var SIZE = {
  mini: "mini",
  default: "default",
  compact: "compact",
  large: "large"
};

// node_modules/baseui/esm/button/styled-components.js
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var BaseButton = styled("button", function(_ref) {
  var $theme = _ref.$theme, $size = _ref.$size, $colors = _ref.$colors, $kind = _ref.$kind, $shape = _ref.$shape, $isLoading = _ref.$isLoading, $isSelected = _ref.$isSelected, $disabled = _ref.$disabled, $isFocusVisible = _ref.$isFocusVisible;
  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({
    display: "inline-flex",
    flexDirection: $isLoading ? "column" : "row",
    alignItems: "center",
    justifyContent: "center",
    borderLeftWidth: 0,
    borderTopWidth: 0,
    borderRightWidth: 0,
    borderBottomWidth: 0,
    borderLeftStyle: "none",
    borderTopStyle: "none",
    borderRightStyle: "none",
    borderBottomStyle: "none",
    outline: "none",
    boxShadow: $isFocusVisible ? "inset 0 0 0 3px ".concat($theme.colors.accent) : "none",
    textDecoration: "none",
    WebkitAppearance: "none",
    transitionProperty: "background",
    transitionDuration: $theme.animation.timing200,
    transitionTimingFunction: $theme.animation.linearCurve,
    cursor: "pointer",
    ":disabled": _objectSpread({
      cursor: "not-allowed"
    }, getDisabledStyles({
      $theme,
      $kind,
      $disabled,
      $isSelected
    })),
    marginLeft: 0,
    marginTop: 0,
    marginRight: 0,
    marginBottom: 0
  }, getFontStyles({
    $theme,
    $size
  })), getBorderRadiiStyles({
    $theme,
    $size,
    $shape
  })), getPaddingStyles({
    $theme,
    $size,
    $shape
  })), getColorStyles({
    $theme,
    $colors,
    $kind,
    $isLoading,
    $isSelected,
    $disabled
  })), getShapeStyles({
    $shape,
    $size
  }));
});
BaseButton.displayName = "BaseButton";
BaseButton.displayName = "BaseButton";
var EndEnhancer = styled("div", function(_ref2) {
  var $theme = _ref2.$theme;
  var marginDirection = $theme.direction === "rtl" ? "marginRight" : "marginLeft";
  return _defineProperty({
    display: "flex"
  }, marginDirection, $theme.sizing.scale500);
});
EndEnhancer.displayName = "EndEnhancer";
EndEnhancer.displayName = "EndEnhancer";
var StartEnhancer = styled("div", function(_ref4) {
  var $theme = _ref4.$theme;
  var marginDirection = $theme.direction === "rtl" ? "marginLeft" : "marginRight";
  return _defineProperty({
    display: "flex"
  }, marginDirection, $theme.sizing.scale500);
});
StartEnhancer.displayName = "StartEnhancer";
StartEnhancer.displayName = "StartEnhancer";
var LoadingSpinnerContainer = styled("div", function(_ref6) {
  var $theme = _ref6.$theme, $size = _ref6.$size;
  var margins = "3px";
  if ($size === SIZE.mini || $size === SIZE.compact) {
    margins = $theme.sizing.scale0;
  }
  if ($size === SIZE.large) {
    margins = $theme.sizing.scale100;
  }
  return {
    lineHeight: 0,
    position: "static",
    marginBottom: margins,
    marginTop: margins
  };
});
LoadingSpinnerContainer.displayName = "LoadingSpinnerContainer";
LoadingSpinnerContainer.displayName = "LoadingSpinnerContainer";
var LoadingSpinner = styled("span", function(_ref7) {
  var $theme = _ref7.$theme, $kind = _ref7.$kind, $disabled = _ref7.$disabled, $size = _ref7.$size;
  var _getLoadingSpinnerCol = getLoadingSpinnerColors({
    $theme,
    $kind,
    $disabled
  }), foreground = _getLoadingSpinnerCol.foreground, background = _getLoadingSpinnerCol.background;
  var dimension = $theme.sizing.scale550;
  if ($size === SIZE.mini || $size === SIZE.compact) {
    dimension = $theme.sizing.scale500;
  }
  if ($size === SIZE.large) {
    dimension = $theme.sizing.scale600;
  }
  return {
    height: dimension,
    width: dimension,
    borderTopLeftRadius: "50%",
    borderTopRightRadius: "50%",
    borderBottomRightRadius: "50%",
    borderBottomLeftRadius: "50%",
    borderLeftStyle: "solid",
    borderTopStyle: "solid",
    borderRightStyle: "solid",
    borderBottomStyle: "solid",
    borderLeftWidth: $theme.sizing.scale0,
    borderTopWidth: $theme.sizing.scale0,
    borderRightWidth: $theme.sizing.scale0,
    borderBottomWidth: $theme.sizing.scale0,
    borderTopColor: foreground,
    borderLeftColor: background,
    borderBottomColor: background,
    borderRightColor: background,
    boxSizing: "border-box",
    display: "inline-block",
    animationDuration: $theme.animation.timing700,
    animationTimingFunction: "linear",
    animationIterationCount: "infinite",
    animationName: {
      to: {
        transform: "rotate(360deg)"
      },
      from: {
        transform: "rotate(0deg)"
      }
    }
  };
});
LoadingSpinner.displayName = "LoadingSpinner";
LoadingSpinner.displayName = "LoadingSpinner";
function getLoadingSpinnerColors(_ref8) {
  var $theme = _ref8.$theme, $kind = _ref8.$kind, $disabled = _ref8.$disabled;
  if ($disabled) {
    return {
      foreground: $theme.colors.buttonDisabledSpinnerForeground,
      background: $theme.colors.buttonDisabledSpinnerBackground
    };
  }
  switch ($kind) {
    case KIND.secondary: {
      return {
        foreground: $theme.colors.buttonSecondarySpinnerForeground,
        background: $theme.colors.buttonSecondarySpinnerBackground
      };
    }
    case KIND.tertiary: {
      return {
        foreground: $theme.colors.buttonTertiarySpinnerForeground,
        background: $theme.colors.buttonTertiarySpinnerBackground
      };
    }
    case KIND.primary:
    default: {
      return {
        foreground: $theme.colors.buttonPrimarySpinnerForeground,
        background: $theme.colors.buttonPrimarySpinnerBackground
      };
    }
  }
}
function getBorderRadiiStyles(_ref9) {
  var $theme = _ref9.$theme, $size = _ref9.$size, $shape = _ref9.$shape;
  var value = $theme.borders.buttonBorderRadius;
  if ($shape === SHAPE.pill) {
    if ($size === SIZE.compact) {
      value = "30px";
    } else if ($size === SIZE.large) {
      value = "42px";
    } else {
      value = "38px";
    }
  } else if ($shape === SHAPE.circle || $shape === SHAPE.round) {
    value = "50%";
  } else if ($size === SIZE.mini) {
    value = $theme.borders.buttonBorderRadiusMini;
  }
  return {
    borderTopRightRadius: value,
    borderBottomRightRadius: value,
    borderTopLeftRadius: value,
    borderBottomLeftRadius: value
  };
}
function getFontStyles(_ref10) {
  var $theme = _ref10.$theme, $size = _ref10.$size;
  switch ($size) {
    case SIZE.mini:
      return $theme.typography.font150;
    case SIZE.compact:
      return $theme.typography.font250;
    case SIZE.large:
      return $theme.typography.font450;
    default:
      return $theme.typography.font350;
  }
}
function getDisabledStyles(_ref11) {
  var $theme = _ref11.$theme, $kind = _ref11.$kind, $isSelected = _ref11.$isSelected, $disabled = _ref11.$disabled;
  if ($disabled && $isSelected) {
    if ($kind === KIND.primary || $kind === KIND.secondary) {
      return {
        color: $theme.colors.buttonDisabledActiveText,
        backgroundColor: $theme.colors.buttonDisabledActiveFill
      };
    } else if ($kind === KIND.tertiary) {
      return {
        backgroundColor: $theme.colors.buttonTertiaryDisabledActiveFill,
        color: $theme.colors.buttonTertiaryDisabledActiveText
      };
    }
  }
  return {
    backgroundColor: $kind === KIND.tertiary ? "transparent" : $theme.colors.buttonDisabledFill,
    color: $theme.colors.buttonDisabledText
  };
}
function getPaddingStyles(_ref12) {
  var $theme = _ref12.$theme, $size = _ref12.$size, $shape = _ref12.$shape;
  var iconShape = $shape === SHAPE.square || $shape === SHAPE.circle || $shape === SHAPE.round;
  switch ($size) {
    case SIZE.mini:
      return {
        paddingTop: $theme.sizing.scale200,
        paddingBottom: $theme.sizing.scale200,
        paddingLeft: iconShape ? $theme.sizing.scale200 : $theme.sizing.scale300,
        paddingRight: iconShape ? $theme.sizing.scale200 : $theme.sizing.scale300
      };
    case SIZE.compact:
      return {
        paddingTop: $theme.sizing.scale400,
        paddingBottom: $theme.sizing.scale400,
        paddingLeft: iconShape ? $theme.sizing.scale400 : $theme.sizing.scale500,
        paddingRight: iconShape ? $theme.sizing.scale400 : $theme.sizing.scale500
      };
    case SIZE.large:
      return {
        paddingTop: $theme.sizing.scale600,
        paddingBottom: $theme.sizing.scale600,
        paddingLeft: iconShape ? $theme.sizing.scale600 : $theme.sizing.scale700,
        paddingRight: iconShape ? $theme.sizing.scale600 : $theme.sizing.scale700
      };
    default:
      return {
        paddingTop: $theme.sizing.scale550,
        paddingBottom: $theme.sizing.scale550,
        paddingLeft: iconShape ? $theme.sizing.scale550 : $theme.sizing.scale600,
        paddingRight: iconShape ? $theme.sizing.scale550 : $theme.sizing.scale600
      };
  }
}
function getColorStyles(_ref13) {
  var $theme = _ref13.$theme, $colors = _ref13.$colors, $isLoading = _ref13.$isLoading, $isSelected = _ref13.$isSelected, $kind = _ref13.$kind, $disabled = _ref13.$disabled;
  if ($colors) {
    return {
      color: $colors.color,
      backgroundColor: $colors.backgroundColor,
      ":hover": {
        boxShadow: "inset 999px 999px 0px rgba(0, 0, 0, 0.04)"
      },
      ":active": {
        boxShadow: "inset 999px 999px 0px rgba(0, 0, 0, 0.08)"
      }
    };
  }
  if ($disabled) {
    return Object.freeze({});
  }
  switch ($kind) {
    case KIND.primary:
      if ($isSelected) {
        return {
          color: $theme.colors.buttonPrimarySelectedText,
          backgroundColor: $theme.colors.buttonPrimarySelectedFill
        };
      }
      return {
        color: $theme.colors.buttonPrimaryText,
        backgroundColor: $theme.colors.buttonPrimaryFill,
        ":hover": {
          backgroundColor: $isLoading ? $theme.colors.buttonPrimaryActive : $theme.colors.buttonPrimaryHover
        },
        ":active": {
          backgroundColor: $theme.colors.buttonPrimaryActive
        }
      };
    case KIND.secondary:
      if ($isSelected) {
        return {
          color: $theme.colors.buttonPrimaryText,
          backgroundColor: $theme.colors.buttonPrimaryFill
        };
      }
      return {
        color: $theme.colors.buttonSecondaryText,
        backgroundColor: $theme.colors.buttonSecondaryFill,
        ":hover": {
          backgroundColor: $isLoading ? $theme.colors.buttonSecondaryActive : $theme.colors.buttonSecondaryHover
        },
        ":active": {
          backgroundColor: $theme.colors.buttonSecondaryActive
        }
      };
    case KIND.tertiary:
      if ($isSelected) {
        return {
          color: $theme.colors.buttonTertiarySelectedText,
          backgroundColor: $theme.colors.buttonTertiarySelectedFill
        };
      }
      return {
        color: $theme.colors.buttonTertiaryText,
        backgroundColor: $theme.colors.buttonTertiaryFill,
        ":hover": {
          backgroundColor: $isLoading ? $theme.colors.buttonTertiaryActive : $theme.colors.buttonTertiaryHover
        },
        ":active": {
          backgroundColor: $theme.colors.buttonTertiaryActive
        }
      };
    default:
      return Object.freeze({});
  }
}
function getShapeStyles(_ref14) {
  var $shape = _ref14.$shape, $size = _ref14.$size;
  if ($shape === SHAPE.circle || $shape === SHAPE.square) {
    var height, width;
    switch ($size) {
      case SIZE.mini:
        height = "28px";
        width = "28px";
        break;
      case SIZE.compact:
        height = "36px";
        width = "36px";
        break;
      case SIZE.large:
        height = "56px";
        width = "56px";
        break;
      case SIZE.default:
      default:
        height = "48px";
        width = "48px";
        break;
    }
    return {
      height,
      width,
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    };
  } else {
    return {};
  }
}

// node_modules/baseui/esm/button/button.js
var React2 = __toESM(require_react());

// node_modules/baseui/esm/button/utils.js
function getSharedProps(_ref) {
  var colors = _ref.colors, disabled = _ref.disabled, isLoading = _ref.isLoading, isSelected = _ref.isSelected, kind = _ref.kind, shape = _ref.shape, size = _ref.size;
  return {
    $colors: colors,
    $disabled: disabled,
    $isLoading: isLoading,
    $isSelected: isSelected,
    $kind: kind,
    $shape: shape,
    $size: size
  };
}

// node_modules/baseui/esm/button/button-internals.js
var React = __toESM(require_react());
var ReactIs = __toESM(require_react_is());
var _excluded = ["Enhancer"];
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function RenderEnhancer(props) {
  var Enhancer = props.Enhancer, restProps = _objectWithoutProperties(props, _excluded);
  if (typeof Enhancer === "string") {
    return Enhancer;
  }
  if (ReactIs.isValidElementType(Enhancer)) {
    return React.createElement(Enhancer, restProps);
  }
  return Enhancer;
}
function ButtonInternals(props) {
  var children = props.children, _props$overrides = props.overrides, overrides = _props$overrides === void 0 ? {} : _props$overrides, startEnhancer = props.startEnhancer, endEnhancer = props.endEnhancer;
  var _getOverrides = getOverrides(overrides.StartEnhancer, StartEnhancer), _getOverrides2 = _slicedToArray(_getOverrides, 2), StartEnhancer2 = _getOverrides2[0], startEnhancerProps = _getOverrides2[1];
  var _getOverrides3 = getOverrides(overrides.EndEnhancer, EndEnhancer), _getOverrides4 = _slicedToArray(_getOverrides3, 2), EndEnhancer2 = _getOverrides4[0], endEnhancerProps = _getOverrides4[1];
  var sharedProps = getSharedProps(props);
  return React.createElement(React.Fragment, null, startEnhancer !== null && startEnhancer !== void 0 && React.createElement(StartEnhancer2, _extends({}, sharedProps, startEnhancerProps), React.createElement(RenderEnhancer, {
    Enhancer: startEnhancer
  })), children, endEnhancer !== null && endEnhancer !== void 0 && React.createElement(EndEnhancer2, _extends({}, sharedProps, endEnhancerProps), React.createElement(RenderEnhancer, {
    Enhancer: endEnhancer
  })));
}

// node_modules/baseui/esm/button/default-props.js
var defaultProps = {
  disabled: false,
  isLoading: false,
  isSelected: false,
  kind: KIND.primary,
  overrides: {},
  shape: SHAPE.default,
  size: SIZE.default
};

// node_modules/baseui/esm/button/button.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
var _excluded2 = ["overrides", "size", "kind", "shape", "isLoading", "isSelected", "startEnhancer", "endEnhancer", "children", "forwardedRef", "colors"];
function _extends2() {
  _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      _defineProperty2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _objectWithoutProperties2(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose2(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var Button = function(_React$Component) {
  _inherits(Button2, _React$Component);
  var _super = _createSuper(Button2);
  function Button2() {
    var _this;
    _classCallCheck(this, Button2);
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(_args));
    _defineProperty2(_assertThisInitialized(_this), "state", {
      isFocusVisible: false
    });
    _defineProperty2(_assertThisInitialized(_this), "internalOnClick", function() {
      var _this$props = _this.props, isLoading = _this$props.isLoading, onClick = _this$props.onClick;
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      if (isLoading) {
        args[0].preventDefault();
        return;
      }
      onClick && onClick.apply(void 0, args);
    });
    _defineProperty2(_assertThisInitialized(_this), "handleFocus", function(event) {
      if (isFocusVisible(event)) {
        _this.setState({
          isFocusVisible: true
        });
      }
    });
    _defineProperty2(_assertThisInitialized(_this), "handleBlur", function(event) {
      if (_this.state.isFocusVisible !== false) {
        _this.setState({
          isFocusVisible: false
        });
      }
    });
    return _this;
  }
  _createClass(Button2, [{
    key: "render",
    value: function render() {
      var _ref;
      var _this$props2 = this.props, _this$props2$override = _this$props2.overrides, overrides = _this$props2$override === void 0 ? {} : _this$props2$override, size = _this$props2.size, kind = _this$props2.kind, shape = _this$props2.shape, isLoading = _this$props2.isLoading, isSelected = _this$props2.isSelected, startEnhancer = _this$props2.startEnhancer, endEnhancer = _this$props2.endEnhancer, children = _this$props2.children, forwardedRef = _this$props2.forwardedRef, colors = _this$props2.colors, restProps = _objectWithoutProperties2(_this$props2, _excluded2);
      var _getOverrides = getOverrides(
        overrides.BaseButton || overrides.Root,
        BaseButton
      ), _getOverrides2 = _slicedToArray2(_getOverrides, 2), BaseButton2 = _getOverrides2[0], baseButtonProps = _getOverrides2[1];
      var _getOverrides3 = getOverrides(overrides.LoadingSpinner, LoadingSpinner), _getOverrides4 = _slicedToArray2(_getOverrides3, 2), LoadingSpinner2 = _getOverrides4[0], loadingSpinnerProps = _getOverrides4[1];
      var _getOverrides5 = getOverrides(overrides.LoadingSpinnerContainer, LoadingSpinnerContainer), _getOverrides6 = _slicedToArray2(_getOverrides5, 2), LoadingSpinnerContainer2 = _getOverrides6[0], loadingSpinnerContainerProps = _getOverrides6[1];
      var sharedProps = _objectSpread2(_objectSpread2({}, getSharedProps(this.props)), {}, {
        $isFocusVisible: this.state.isFocusVisible
      });
      return React2.createElement(BaseButton2, _extends2({
        ref: forwardedRef,
        "data-baseweb": "button"
      }, isLoading ? (_ref = {}, _defineProperty2(_ref, "aria-label", "loading ".concat(typeof this.props.children === "string" ? this.props.children : "")), _defineProperty2(_ref, "aria-busy", "true"), _ref) : {}, sharedProps, restProps, baseButtonProps, {
        onClick: this.internalOnClick,
        onFocus: forkFocus(_objectSpread2(_objectSpread2({}, restProps), baseButtonProps), this.handleFocus),
        onBlur: forkBlur(_objectSpread2(_objectSpread2({}, restProps), baseButtonProps), this.handleBlur)
      }), isLoading ? React2.createElement(React2.Fragment, null, React2.createElement("div", {
        style: {
          opacity: 0,
          display: "flex",
          height: "0px"
        }
      }, React2.createElement(ButtonInternals, this.props)), React2.createElement(LoadingSpinnerContainer2, _extends2({}, sharedProps, loadingSpinnerContainerProps), React2.createElement(LoadingSpinner2, _extends2({}, sharedProps, loadingSpinnerProps)))) : React2.createElement(ButtonInternals, this.props));
    }
  }]);
  return Button2;
}(React2.Component);
_defineProperty2(Button, "defaultProps", defaultProps);
var ForwardedButton = React2.forwardRef(function(props, ref) {
  return React2.createElement(Button, _extends2({
    forwardedRef: ref
  }, props));
});
ForwardedButton.displayName = "Button";
var button_default = ForwardedButton;

export {
  KIND,
  SHAPE,
  SIZE,
  BaseButton,
  EndEnhancer,
  StartEnhancer,
  LoadingSpinnerContainer,
  LoadingSpinner,
  button_default
};
//# sourceMappingURL=chunk-GRSVZK5D.js.map
